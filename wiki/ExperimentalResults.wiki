#summary Experimental results related to baselines

= Impact of Using Distributional Semantics =

We implemented a simple matcher that only matches concepts with labels of equal size. This matcher creates a match if the words that occur in the label at the same position are equals, very similar according the levensthein (just for typos or spelling variants), or similar according the 2nd order similarity. For the latter we experimented with different thresholds (0.2^2 , 0.3^2 , 0.4^2 , 0.5^2 , 0.6^2 , 0.7^2 ). Any value higher lower than 0.6^2 was never better than 0.6 w.r.t. recall. That means we could never find any additional correct correspondences, while precision significantly dropped. When going from 0.6^2 to 0.7^2, we lost some interesting correspondences. It seems that 0.6^2 is a good choice for an recall oriented approach.


= Results for t=0.5^2 =

||*source* || 	*target* || 	*P1* || 	*R1* || 	*F1* || *P2* || 	*R2* || 	*F2* ||*P3* || 	*R3* || 	*F3* || *+* || *-*||
||cmt || 	conference || 	0.667 || 	0.267 || 	0.381 || 	0.417 || 	0.333 || 	0.37 || 	0.444 || 	0.267 || 	0.333 || 	1 || 	5 || 
||cmt || 	confof || 	0.8 || 	0.25 || 	0.381 || 	0.571 || 	0.25 || 	0.348 || 	0.667 || 	0.25 || 	0.364 || 	0 || 	2 || 
||cmt || 	edas || 	1 || 	0.615 || 	0.762 || 	0.8 || 	0.615 || 	0.696 || 	1 || 	0.615 || 	0.762 || 	0 || 	2 || 
||cmt || 	ekaw || 	1 || 	0.455 || 	0.625 || 	0.714 || 	0.455 || 	0.556 || 	0.833 || 	0.455 || 	0.588 || 	0 || 	2 || 
||cmt || 	iasted || 	0.8 || 	1 || 	0.889 || 	0.4 || 	1 || 	0.571 || 	0.571 || 	1 || 	0.727 || 	0 || 	5 || 
||cmt || 	sigkdd || 	1 || 	0.667 || 	0.8 || 	0.889 || 	0.667 || 	0.762 || 	1 || 	0.667 || 	0.8 || 	0 || 	1 || 
||conference || 	confof || 	0.875 || 	0.467 || 	0.609 || 	0.636 || 	0.467 || 	0.538 || 	0.7 || 	0.467 || 	0.56 || 	0 || 	3 || 
||conference || 	edas || 	0.875 || 	0.412 || 	0.56 || 	0.583 || 	0.412 || 	0.483 || 	0.778 || 	0.412 || 	0.538 || 	0 || 	4 || 
||conference || 	ekaw || 	0.692 || 	0.36 || 	0.474 || 	0.562 || 	0.36 || 	0.439 || 	0.643 || 	0.36 || 	0.462 || 	0 || 	3 || 
||conference || 	iasted || 	0.8 || 	0.286 || 	0.421 || 	0.267 || 	0.286 || 	0.276 || 	0.5 || 	0.286 || 	0.364 || 	0 || 	10 || 
||conference || 	sigkdd || 	0.889 || 	0.533 || 	0.667 || 	0.727 || 	0.533 || 	0.615 || 	0.8 || 	0.533 || 	0.64 || 	0 || 	2 || 
||confof || 	edas || 	0.9 || 	0.474 || 	0.621 || 	0.733 || 	0.579 || 	0.647 || 	0.917 || 	0.579 || 	0.71 || 	2 || 	3 || 
||confof || 	ekaw || 	0.9 || 	0.45 || 	0.6 || 	0.818 || 	0.45 || 	0.581 || 	0.9 || 	0.45 || 	0.6 || 	0 || 	1 || 
||confof || 	iasted || 	1 || 	0.444 || 	0.615 || 	0.286 || 	0.444 || 	0.348 || 	0.4 || 	0.444 || 	0.421 || 	0 || 	10 || 
||confof || 	sigkdd || 	1 || 	0.571 || 	0.727 || 	0.667 || 	0.571 || 	0.615 || 	0.8 || 	0.571 || 	0.667 || 	0 || 	2 || 
||edas || 	ekaw || 	0.769 || 	0.435 || 	0.556 || 	0.65 || 	0.565 || 	0.605 || 	0.765 || 	0.565 || 	0.65 || 	3 || 	4 || 
||edas || 	iasted || 	0.889 || 	0.421 || 	0.571 || 	0.444 || 	0.421 || 	0.432 || 	0.667 || 	0.421 || 	0.516 || 	0 || 	9 || 
||edas || 	sigkdd || 	1 || 	0.467 || 	0.636 || 	0.8 || 	0.533 || 	0.64 || 	1 || 	0.533 || 	0.696 || 	1 || 	2 || 
||ekaw || 	iasted || 	1 || 	0.6 || 	0.75 || 	0.545 || 	0.6 || 	0.571 || 	0.75 || 	0.6 || 	0.667 || 	0 || 	5 || 
||ekaw || 	sigkdd || 	1 || 	0.636 || 	0.778 || 	0.7 || 	0.636 || 	0.667 || 	0.7 || 	0.636 || 	0.667 || 	0 || 	3 || 
||iasted || 	sigkdd || 	0.923 || 	0.8 || 	0.857 || 	0.6 || 	0.8 || 	0.686 || 	0.857 || 	0.8 || 	0.828 || 	0 || 	7 || 
||  || AVG	 || 	0.894 || 	0.505 || 	0.632 || 	0.61 || 	0.523 || 	0.545 || 	0.747 || 	0.52 || 	0.598 || 	7 || 	85 || 

  * 1 refers to using no 2nd order similarity (i.e. string equivalence and string similarity with a very high threshold.
  * 2 refers to using additionally 2nd order similarity
  * 3 refers to 2 plus using a greedy 1:1 extraction
  * + denotes the number of additionally found correct correspondences comparing 1 and 2
  * - denotes the number of additionally found incorrect correspondences comparing 1 and 2